{"ast":null,"code":"const regexNum = /^([0-9])*$/;\nconst validate = inputs => {\n  let errors = {};\n  console.log(typeof inputs.healthScore);\n  if (!inputs.name) {\n    errors.name = 'La receta requiere un nombre';\n  }\n  if (inputs.name.length < 2) {\n    errors.name = 'El nombre debe ser de mas de 2 caracteres';\n  }\n  if (inputs.name.length > 50) {\n    errors.name = 'El nombre no puede superar los 50 caracteres';\n  }\n  if (!inputs.summary) {\n    errors.summary = 'Debes agregar una descripción de la receta';\n  }\n  if (inputs.summary.length > 1200) {\n    errors.name = 'El nombre no puede superar los 1200 caracteres';\n  }\n  if (typeof inputs.healtScore !== 'number') {\n    errors.healtScore = 'Este valor debe ser un número';\n  }\n  if (inputs.healthScore > 100 || inputs.healthScore < 1) {\n    errors.healthScore = 'El valor debe ser entre 1 y 100';\n  }\n  if (!inputs.healthScore) {\n    errors.healthScore = 'Este campo requiere un valor';\n  }\n  return errors;\n};\nexport default validate;","map":{"version":3,"names":["regexNum","validate","inputs","errors","console","log","healthScore","name","length","summary","healtScore"],"sources":["C:/Users/jjfio/Desktop/Soy Henry/PI/PI-Food-main/client/src/React/Form/validate.js"],"sourcesContent":["const regexNum = /^([0-9])*$/;\r\n\r\nconst validate = (inputs) => {\r\n    \r\n    let errors = {};\r\n     console.log(typeof inputs.healthScore)\r\n    if(!inputs.name){\r\n        errors.name = 'La receta requiere un nombre'\r\n    }\r\n    if(inputs.name.length < 2){\r\n        errors.name ='El nombre debe ser de mas de 2 caracteres'\r\n    }\r\n    if(inputs.name.length > 50){\r\n        errors.name ='El nombre no puede superar los 50 caracteres'\r\n    }\r\n    if(!inputs.summary){\r\n        errors.summary='Debes agregar una descripción de la receta'\r\n    }\r\n    if(inputs.summary.length > 1200){\r\n        errors.name ='El nombre no puede superar los 1200 caracteres'\r\n    }\r\n    if(typeof inputs.healtScore !== 'number'){\r\n        errors.healtScore = 'Este valor debe ser un número'\r\n    }\r\n    if(inputs.healthScore > 100 || inputs.healthScore < 1){\r\n        errors.healthScore = 'El valor debe ser entre 1 y 100'\r\n    }\r\n    if(!inputs.healthScore){\r\n        errors.healthScore = 'Este campo requiere un valor'\r\n    }\r\n\r\n    return errors\r\n}\r\n\r\nexport default validate;\r\n\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,YAAY;AAE7B,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EAEzB,IAAIC,MAAM,GAAG,CAAC,CAAC;EACdC,OAAO,CAACC,GAAG,CAAC,OAAOH,MAAM,CAACI,WAAW,CAAC;EACvC,IAAG,CAACJ,MAAM,CAACK,IAAI,EAAC;IACZJ,MAAM,CAACI,IAAI,GAAG,8BAA8B;EAChD;EACA,IAAGL,MAAM,CAACK,IAAI,CAACC,MAAM,GAAG,CAAC,EAAC;IACtBL,MAAM,CAACI,IAAI,GAAE,2CAA2C;EAC5D;EACA,IAAGL,MAAM,CAACK,IAAI,CAACC,MAAM,GAAG,EAAE,EAAC;IACvBL,MAAM,CAACI,IAAI,GAAE,8CAA8C;EAC/D;EACA,IAAG,CAACL,MAAM,CAACO,OAAO,EAAC;IACfN,MAAM,CAACM,OAAO,GAAC,4CAA4C;EAC/D;EACA,IAAGP,MAAM,CAACO,OAAO,CAACD,MAAM,GAAG,IAAI,EAAC;IAC5BL,MAAM,CAACI,IAAI,GAAE,gDAAgD;EACjE;EACA,IAAG,OAAOL,MAAM,CAACQ,UAAU,KAAK,QAAQ,EAAC;IACrCP,MAAM,CAACO,UAAU,GAAG,+BAA+B;EACvD;EACA,IAAGR,MAAM,CAACI,WAAW,GAAG,GAAG,IAAIJ,MAAM,CAACI,WAAW,GAAG,CAAC,EAAC;IAClDH,MAAM,CAACG,WAAW,GAAG,iCAAiC;EAC1D;EACA,IAAG,CAACJ,MAAM,CAACI,WAAW,EAAC;IACnBH,MAAM,CAACG,WAAW,GAAG,8BAA8B;EACvD;EAEA,OAAOH,MAAM;AACjB,CAAC;AAED,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}