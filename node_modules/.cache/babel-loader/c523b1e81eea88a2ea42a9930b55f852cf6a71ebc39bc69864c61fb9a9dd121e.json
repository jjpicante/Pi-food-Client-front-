{"ast":null,"code":"import { GET_RECIPES, GET_DIETS, SEARCH_RECIPES, GET_DETAIL, POST_RECIPE, FILTER_RECIPE_BY_DIETS, FILTER_RECIPE_BY_ORIGIN, SORT_BY_NAME, SORT_BY_HS, LOADER } from \"./actionsTypes\";\nconst initialState = {\n  recipes: [],\n  originalRecipes: [],\n  recipeByID: {},\n  diets: [],\n  loader: true\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  const allRecipes = state.originalRecipes;\n  switch (type) {\n    case GET_RECIPES:\n      return {\n        ...state,\n        recipes: payload,\n        originalRecipes: payload\n      };\n    case GET_DIETS:\n      return {\n        ...state,\n        diets: payload\n      };\n    case SEARCH_RECIPES:\n      return {\n        ...state,\n        recipes: payload\n      };\n    case GET_DETAIL:\n      return {\n        ...state,\n        recipes: payload\n      };\n    case POST_RECIPE:\n      return {\n        ...state,\n        recipes: payload\n      };\n    case FILTER_RECIPE_BY_DIETS:\n      const recipesFiltered = payload === 'all' ? allRecipes : allRecipes.filter(recipe => {\n        var _recipe$diets;\n        return (_recipe$diets = recipe.diets) === null || _recipe$diets === void 0 ? void 0 : _recipe$diets.includes(payload);\n      });\n      return {\n        ...state,\n        recipes: recipesFiltered\n      };\n    case FILTER_RECIPE_BY_ORIGIN:\n      console.log(\"reducer\", payload);\n      const recipesByOrigin = payload === 'Creadas' ? allRecipes.filter(recipe => recipe.createdInDb) : allRecipes.filter(recipe => !recipe.createdInDb);\n      return {\n        ...state,\n        recipes: payload === 'Todas' ? allRecipes : recipesByOrigin\n      };\n    case SORT_BY_NAME:\n      const sortByName = payload === 'asc' ? allRecipes.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      }) : allRecipes.sort((a, b) => {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (a.name < b.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        recipes: sortByName\n      };\n    case SORT_BY_HS:\n      const sortByHs = payload === 'asc' ? allRecipes.sort((a, b) => {\n        if (a.healthScore > b.healthScore) {\n          return 1;\n        }\n        if (a.healthScore < b.healthScore) {\n          return -1;\n        }\n        return 0;\n      }) : allRecipes.sort((a, b) => {\n        if (a.healthScore > b.healthScore) {\n          return -1;\n        }\n        if (a.healthScore < b.healthScore) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        recipes: sortByHs\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}","map":{"version":3,"names":["GET_RECIPES","GET_DIETS","SEARCH_RECIPES","GET_DETAIL","POST_RECIPE","FILTER_RECIPE_BY_DIETS","FILTER_RECIPE_BY_ORIGIN","SORT_BY_NAME","SORT_BY_HS","LOADER","initialState","recipes","originalRecipes","recipeByID","diets","loader","reducer","state","arguments","length","undefined","type","payload","allRecipes","recipesFiltered","filter","recipe","_recipe$diets","includes","console","log","recipesByOrigin","createdInDb","sortByName","sort","a","b","name","sortByHs","healthScore"],"sources":["C:/Users/jjfio/Desktop/Soy Henry/PI/PI-Food-main/client/src/Redux/reducer.js"],"sourcesContent":["import {\r\n    GET_RECIPES,\r\n    GET_DIETS,\r\n    SEARCH_RECIPES,\r\n    GET_DETAIL,\r\n    POST_RECIPE,\r\n    FILTER_RECIPE_BY_DIETS,\r\n    FILTER_RECIPE_BY_ORIGIN,\r\n    SORT_BY_NAME,\r\n    SORT_BY_HS,\r\n    LOADER\r\n} from \"./actionsTypes\"\r\n\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    originalRecipes: [],\r\n    recipeByID: {},\r\n    diets: [],\r\n    loader: true,\r\n}\r\n\r\n\r\nexport default function reducer(state = initialState, { type, payload }) {\r\n    const allRecipes = state.originalRecipes\r\n    switch (type) {\r\n        case GET_RECIPES:\r\n            return {\r\n                ...state,\r\n                recipes: payload,\r\n                originalRecipes: payload\r\n            }\r\n        case GET_DIETS:\r\n            return {\r\n                ...state,\r\n                diets: payload\r\n            }\r\n        case SEARCH_RECIPES:\r\n            return {\r\n                ...state,\r\n                recipes: payload\r\n            }\r\n        case GET_DETAIL:\r\n            return {\r\n                ...state,\r\n                recipes: payload\r\n            }\r\n        case POST_RECIPE:\r\n            return {\r\n                ...state,\r\n                recipes: payload\r\n            }\r\n        case FILTER_RECIPE_BY_DIETS:\r\n            const recipesFiltered = payload === 'all' ? allRecipes : allRecipes.filter(recipe => recipe.diets?.includes(payload));\r\n            return {\r\n                ...state,\r\n                recipes: recipesFiltered\r\n            }\r\n        case FILTER_RECIPE_BY_ORIGIN:\r\n            console.log(\"reducer\", payload)\r\n            const recipesByOrigin = payload === 'Creadas' ? allRecipes.filter(recipe => recipe.createdInDb) : allRecipes.filter(recipe => !recipe.createdInDb)\r\n            return {\r\n                ...state,\r\n                recipes: payload === 'Todas' ? allRecipes : recipesByOrigin\r\n            }\r\n        case SORT_BY_NAME:\r\n            const sortByName = payload === 'asc'\r\n                ? allRecipes.sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }) :\r\n                allRecipes.sort((a, b) => {\r\n                    if (a.name > b.name) {\r\n                        return -1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n            return {\r\n                ...state,\r\n                recipes: sortByName\r\n            }\r\n        case SORT_BY_HS:\r\n            const sortByHs = payload === 'asc'\r\n                ? allRecipes.sort((a, b) => {\r\n                    if (a.healthScore > b.healthScore) {\r\n                        return 1;\r\n                    }\r\n                    if (a.healthScore < b.healthScore) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }) :\r\n                allRecipes.sort((a, b) => {\r\n                    if (a.healthScore > b.healthScore) {\r\n                        return -1;\r\n                    }\r\n                    if (a.healthScore < b.healthScore) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n            return {\r\n                ...state,\r\n                recipes: sortByHs\r\n            }\r\n\r\n        default:\r\n            return { ...state, }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}